-- test-run result file version 2
build_path = os.getenv("BUILDDIR")
 | ---
 | ...
package.cpath = build_path..'/test/box/?.so;'..build_path..'/test/box/?.dylib;'..package.cpath
 | ---
 | ...

cbox = require('cbox')
 | ---
 | ...
fio = require('fio')
 | ---
 | ...

ext = (jit.os == "OSX" and "dylib" or "so")
 | ---
 | ...

cfunc_path = fio.pathjoin(build_path, "test/box/cfunc.") .. ext
 | ---
 | ...
cfunc1_path = fio.pathjoin(build_path, "test/box/cfunc1.") .. ext
 | ---
 | ...
cfunc2_path = fio.pathjoin(build_path, "test/box/cfunc2.") .. ext
 | ---
 | ...

_ = pcall(fio.unlink(cfunc_path))
 | ---
 | ...
fio.symlink(cfunc1_path, cfunc_path)
 | ---
 | - true
 | ...

--
-- They all are sitting in cfunc.so
cfunc_nop = cbox.func.load('cfunc.cfunc_nop')
 | ---
 | ...
cfunc_fetch_evens = cbox.func.load('cfunc.cfunc_fetch_evens')
 | ---
 | ...
cfunc_multireturn = cbox.func.load('cfunc.cfunc_multireturn')
 | ---
 | ...
cfunc_args = cbox.func.load('cfunc.cfunc_args')
 | ---
 | ...
cfunc_sum = cbox.func.load('cfunc.cfunc_sum')
 | ---
 | ...

--
-- Make sure they all are callable
cfunc_nop()
 | ---
 | - true
 | ...
cfunc_fetch_evens()
 | ---
 | - true
 | ...
cfunc_multireturn()
 | ---
 | - true
 | ...
cfunc_args()
 | ---
 | - true
 | ...

--
-- Clean old function references and reload a new one.
_ = pcall(fio.unlink(cfunc_path))
 | ---
 | ...
fio.symlink(cfunc2_path, cfunc_path)
 | ---
 | - true
 | ...

cbox.module.reload('cfunc')
 | ---
 | - true
 | ...

cfunc_nop()
 | ---
 | - true
 | ...
cfunc_multireturn()
 | ---
 | - true
 | - [1]
 | - [1]
 | ...
cfunc_fetch_evens({2,4,6})
 | ---
 | - true
 | ...
cfunc_fetch_evens({1,2,3})  -- error
 | ---
 | - null
 | - invalid argument 1 != 2
 | ...
cfunc_args(1, "hello")
 | ---
 | - true
 | - [1, 'hello']
 | ...
cfunc_sum(1) -- error
 | ---
 | - null
 | - invalid argument count
 | ...
cfunc_sum(1,2)
 | ---
 | - true
 | - 3
 | ...

--
-- Clean it up
cbox.func.unload('cfunc.cfunc_nop')
 | ---
 | - true
 | ...
cbox.func.unload('cfunc.cfunc_fetch_evens')
 | ---
 | - true
 | ...
cbox.func.unload('cfunc.cfunc_multireturn')
 | ---
 | - true
 | ...
cbox.func.unload('cfunc.cfunc_args')
 | ---
 | - true
 | ...

--
-- Cleanup the generated symlink
_ = pcall(fio.unlink(cfunc_path))
 | ---
 | ...
